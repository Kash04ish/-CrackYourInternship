class Solution {
public:
    void dfs(vector<vector<int>>& image, int i, int j, int initialColor, int color) {
        if (i < 0 || j < 0 || i >= image.size() || j >= image[0].size() || image[i][j] != initialColor) {
            return;
        }
        image[i][j] = color;
        dfs(image, i + 1, j, initialColor, color);
        dfs(image, i - 1, j, initialColor, color);
        dfs(image, i, j + 1, initialColor, color);
        dfs(image, i, j - 1, initialColor, color);
    }
    
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int initialColor = image[sr][sc];
        if (initialColor != color) {
            dfs(image, sr, sc, initialColor, color);
        }
        return image;
    }
};
