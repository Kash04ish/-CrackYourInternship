class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        // vector<int>ans;
        // map<int,int>mp;
        // for(int i=0;i<nums.size();i++)
        //     mp[nums[i]]++;
        // vector<pair<int,int>>v;
        // for(auto it : mp )
        //     v.push_back(make_pair(it.second,it.first));
        // sort(v.rbegin(),v.rend());
        // for(int i=0;i<v.size() && k!=0 ;i++){
        //     ans.push_back(v[i].second);
        //     k--;
        // }       
        // return ans; 
        unordered_map<int, int>m;
		for(int i=0; i<nums.size(); i++){
			m[nums[i]]++;
		}
		priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>>q;
		for(auto it: m){
			q.push({it.second, it.first});
			if(q.size()>k){
                q.pop();
            }
		}
		vector<int>ans;
		while(!q.empty()){
			ans.push_back(q.top().second);
			q.pop();
		}
        return ans;
    }
};