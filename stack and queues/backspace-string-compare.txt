class Solution {
public:
    bool backspaceCompare(string s, string t) {
    int i = s.length() - 1, j = t.length() - 1;

    while (i >= 0 || j >= 0) {
        for (int backspaceCount = 0; i >= 0 && (s[i] == '#' || backspaceCount > 0); i--)
            backspaceCount += (s[i] == '#') ? 1 : -1;

        for (int backspaceCount = 0; j >= 0 && (t[j] == '#' || backspaceCount > 0); j--)
            backspaceCount += (t[j] == '#') ? 1 : -1;

        if ((i >= 0) != (j >= 0) || (i >= 0 && j >= 0 && s[i] != t[j]))
            return false;
        
        i--;
        j--;
    }

    return true;
    //     int i = s.length() - 1;
    // int j = t.length() - 1;

    // while (i >= 0 || j >= 0) {
    //     int backspaceCountS = 0;
    //     while (i >= 0 && (s[i] == '#' || backspaceCountS > 0)) {
    //         if (s[i] == '#') {
    //             backspaceCountS++;
    //         } else {
    //             backspaceCountS--;
    //         }
    //         i--;
    //     }

    //     int backspaceCountT = 0;
    //     while (j >= 0 && (t[j] == '#' || backspaceCountT > 0)) {
    //         if (t[j] == '#') {
    //             backspaceCountT++;
    //         } else {
    //             backspaceCountT--;
    //         }
    //         j--;
    //     }

    //     if (i >= 0 && j >= 0 && s[i] != t[j]) {
    //         return false;
    //     }

    //     if ((i >= 0) != (j >= 0)) {
    //         return false;
    //     }

    //     i--;
    //     j--;
    // }

    // return true;
    }
};